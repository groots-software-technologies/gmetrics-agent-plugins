#!/bin/bash
#######################################################
# Program: Gmetrics monitoring plugins listing.
#
# Purpose:
#  Check server health and process using gmetrics plugins.
#  can be run in interactive.
#
# License:
#  This program is distributed in the hope that it will be useful,
#  but under groots software technologies @rights.
#
#######################################################

# Check for people who need help - aren't we all nice ;-)
#######################################################

#Set script name
#######################################################
SCRIPTNAME=`basename $0`

# Import Hostname
#######################################################
HOSTNAME=$(hostname)

# Usage details
#######################################################

if [ "${1}" = "--help" -o "${#}" = "0" ]; 
       then 
       echo -e "Usage: $SCRIPTNAME -w [warning threshold] -c [critical threshold]

        OPTION          DESCRIPTION
        ----------------------------------
        --help          Help
	-w 		Warning Threshold Value
	-c		Warning Threshold Value
        ----------------------------------
 	
	Use: ./$SCRIPTNAME -w 20 -c 30
	";
      exit 3; 
fi 

# Get user-given variables 
#######################################################
while getopts "w:c:" Input; 
do 
      case ${Input} in 
     	w) WARN=${OPTARG};; 
     	c) CRIT=${OPTARG};; 
     	*) echo "Usage: $SCRIPTNAME -w [warning threshold] -c [critical threshold] For more use Help --help " 
           exit 3 
           ;; 
       esac 
done

#######################################################
if [ $WARN -gt $CRIT ]
then
        echo "Warning value must be less than Critical Value or Use Help --help"
        exit 3
else
        WARN=$WARN
fi

#######################################################
# Main Logic
#######################################################

LOCALQUEUE=`/var/qmail/bin/qmHandle -s |head -n1 |awk -F ':' '{print $2}'| sed 's/\s//g'`

REMOTEQUEUE=`/var/qmail/bin/qmHandle -s |tail -n1 |awk -F ':' '{print $2}'| sed 's/\s//g'`

LOCAL=$LOCALQUEUE
REMOTE=$REMOTEQUEUE

#######################################################
OUTPUT=`echo  "Mails in Local Queue=$LOCAL Mails in Remote Queue=$REMOTE"`
#######################################################

if   [ $LOCAL -le $WARN -a $REMOTE -le $WARN ]   
then
        STATUS="OK";
        EXITSTAT=0;
elif  [ $LOCAL -ge  $WARN -o $REMOTE -ge $WARN ]  
then
        if  [ $LOCAL -gt $CRIT -o $REMOTE -gt $CRIT ]
        then
                STATUS="CRITICAL";
                EXITSTAT=2;
        else
                STATUS="WARNING";
                EXITSTAT=1;
        fi
else
        STATUS="UNKNOWN";
        EXITSTAT=3;
fi

echo "$STATUS- $OUTPUT | 'LocalQueue'=${LOCAL}"c";$WARN;$CRIT 'RemoteQueue'=${REMOTE};$WARN;$CRIT" 
exit $EXITSTAT
# End Main Logic.
#######################################################
